name: Deploying Springboot(War) to Tomcat on Azure Windows Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-springboot-app:
    name: Build Springboot Application
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Verify Java Version
        run: java -version

      - name: Download the Code
        uses: actions/checkout@v3

      - name: Fix the Permissions of mvnw command
        run: chmod +x mvnw

      - name: Replace version name
        run: sed -i 's/REPLACETHISVALUEWITHGITHUBACTIONS/b${{github.run_number}}/g' pom.xml

      # - name: cat
      #   run: cat pom.xml

      - name: Build the Code
        run: ./mvnw package

      - name: Verify the Build is Created or Not
        run: ls -l target/*.war

      # - name: Rename file with action number
      #   run: mv target/*.war target/b${{github.run_number}}.war
      
      - name: upload war file to artifact
        uses: actions/upload-artifact@v2
        with:
          name: warfile
          path: target/*.war

  deploy-to-server:
    name: Deploy application to server
    runs-on: ubuntu-latest
    needs: build-springboot-app
    steps:

      - name: Download war
        uses: actions/download-artifact@v3
      - name: list files
        run: ls
        # with:
        #   name: warfile
        #   path: ~/download/path

      - name: Deploy the Build to Tomcat
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: '*.war'                                            
          remote: 'C:\Program Files\Apache Software Foundation\Tomcat 10.0\webapps\'                                               
          host: ${{secrets.HOST}}                                  
          port: ${{secrets.PORT}}
          user: ${{secrets.USER}}
          password: ${{secrets.PASSWORD}}
          pre_upload: echo "This will be executed before the upload!"
          post_upload: echo "executed after the upload!"
          ssh_options: -o StrictHostKeyChecking=no
          scp_options: -v

